import java.util.Scanner;

public class MetodoGaussSeidel {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Ingrese el tama침o de la matriz: ");
        int n = scanner.nextInt();

        double[][] coeficientes = new double[n][n];
        double[] constantes = new double[n];

        System.out.println("Ingrese los coeficientes de la matriz:");
        for (int i = 0; i < n; i++) {
            System.out.println("Ecuaci칩n " + (i + 1) + ":");
            for (int j = 0; j < n; j++) {
                System.out.print("Coeficiente " + (j + 1) + ": ");
                coeficientes[i][j] = scanner.nextDouble();
            }
            System.out.print("Constante: ");
            constantes[i] = scanner.nextDouble();
        }

        double[] estimacionInicial = new double[n];
        System.out.println("Ingrese las estimaciones iniciales:");
        for (int i = 0; i < n; i++) {
            System.out.print("x[" + (i + 1) + "]: ");
            estimacionInicial[i] = scanner.nextDouble();
        }

        System.out.print("Ingrese la tolerancia: ");
        double tolerancia = scanner.nextDouble();

        System.out.print("Ingrese el m치ximo de iteraciones: ");
        int maxIteraciones = scanner.nextInt();

        gaussSeidel(coeficientes, constantes, estimacionInicial, tolerancia, maxIteraciones);

        scanner.close();
    }

    public static void gaussSeidel(double[][] coeficientes, double[] constantes, double[] estimacionInicial, double tolerancia, int maxIteraciones) {
        int n = coeficientes.length;
        double[] x = new double[n];
        double[] xAnterior = new double[n];
        System.arraycopy(estimacionInicial, 0, x, 0, n);

        int iter = 0;
        double error = Double.MAX_VALUE;

        while (error > tolerancia && iter < maxIteraciones) {
            System.arraycopy(x, 0, xAnterior, 0, n);
            for (int i = 0; i < n; i++) {
                double suma = 0.0;
                for (int j = 0; j < n; j++) {
                    if (j != i) {
                        suma += coeficientes[i][j] * x[j];
                    }
                }
                x[i] = (constantes[i] - suma) / coeficientes[i][i];
            }
            error = calcularError(x, xAnterior);
            iter++;
        }

        System.out.println("Soluci칩n:");
        for (int i = 0; i < n; i++) {
            System.out.println("x[" + (i + 1) + "] = " + x[i]);
        }
        System.out.println("Iteraciones: " + iter);
    }

    public static double calcularError(double[] x, double[] xAnterior) {
        double maxError = Double.MIN_VALUE;
        for (int i = 0; i < x.length; i++) {
            double error = Math.abs(x[i] - xAnterior[i]);
            if (error > maxError) {
                maxError = error;
            }
        }
        return maxError;
    }
}
